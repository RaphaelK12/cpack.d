###############################################################################
# Unoffical CPACK configuration for Linux Debian 9
# See also:
# https://www.debian.org/doc/manuals/debian-reference/ch02.en.html#_debian_package_file_names
# https://www.debian.org/doc/debian-policy/#document-ch-controlfields (5.6.12. Version)
# NOT tested with lintian (https://packages.debian.org/it/sid/lintian)
#
# NOTE: CMake/CPack versions < v3.6 do not provide a DEB generator able to 
# manage package component filenames correctly. 
# In such a situation there will be a mismatch between the component PACKAGE 
# NAME and the  corresponding component PACKAGE FILE NAME.
#
# Example for DEVELOPMENT component:
# package NAME      'libsimage-dev' (OK)
# package FILE NAME 'libsimage-1.7.1a-690_amd64-development.deb' (WRONG)
cmake_policy(SET CMP0012 NEW)

include("@CMAKE_CURRENT_BINARY_DIR@/commons.cmake")
include("@CMAKE_CURRENT_BINARY_DIR@/linux-tools.cmake")

# set_filename ([COMPONENT component_name] [ARCH architecture])
# 
# COMPONENT
#   the component name for which to set the package file name. 
#   when passed the CPACK_DEBIAN_<COMPONENT>_FILE_NAME will be set
#   CPACK_PACKAGE_FILE_NAME otherwise
#
# ARCH
#   the architecture for the generate package file
#   default - DEB_ARCH
#
# builds the package file name according to Debian rules
macro(set_filename)
  set(oneValueArgs COMPONENT ARCH)
  cmake_parse_arguments(OPT "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
  if (NOT OPT_ARCH)
    set(OPT_ARCH "${DEB_ARCH}")
  endif()
  set(_version_part_ "${CPACK_PACKAGE_VERSION}-@PACKAGE_BUILD_NUMBER@_${OPT_ARCH}")
  if (OPT_COMPONENT)
    set(CPACK_DEBIAN_${OPT_COMPONENT}_FILE_NAME "${CPACK_DEBIAN_${OPT_COMPONENT}_PACKAGE_NAME}-${_version_part_}.deb")
    artifacts_add("${CPACK_DEBIAN_${OPT_COMPONENT}_FILE_NAME}")
  else()
    set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${_version_part_}")
    artifacts_add("${CPACK_PACKAGE_FILE_NAME}")
  endif()
endmacro(set_filename)

# this macro define a component package according to Debian specifications for
# COMPONENT NAME, SECTION, ARCHITECTURE and optional name postfix (like 'dev')
macro(component COMPONENT SECTION ARCH)
  if (${ARGC} GREATER 3)
    set(CPACK_DEBIAN_${COMPONENT}_PACKAGE_NAME "${CPACK_PACKAGE_NAME}-${ARGV3}")
  else()
    set(CPACK_DEBIAN_${COMPONENT}_PACKAGE_NAME "${CPACK_PACKAGE_NAME}")
  endif()
  set_filename(COMPONENT "${COMPONENT}" ARCH "${ARCH}")
  set(CPACK_DEBIAN_${COMPONENT}_PACKAGE_SECTION   ${SECTION})
endmacro(component)

##############################################################################
# start of package creation

config_package(NAME "lib@PROJECT_NAME@" LOWCASE)
if (CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
  set(DEB_ARCH "amd64")
else()
  set(DEB_ARCH "${CMAKE_SYSTEM_PROCESSOR}")
endif()

set(CPACK_GENERATOR               "DEB")
set_filename()
set(CPACK_DEB_COMPONENT_INSTALL   "ON")
set(CPACK_DEBIAN_PACKAGE_HOMEPAGE "${PROJECT_URL}")

artifacts_reset()
component(RUNTIME       libs     "${DEB_ARCH}"    )
component(DEVELOPMENT   libdevel "${DEB_ARCH}" dev)
artifacts_save()

# end of package creation
##############################################################################
